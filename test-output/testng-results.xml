<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-10T13:07:54 PST" name="Default suite" finished-at="2023-11-10T13:08:16 PST" duration-ms="21978">
    <groups>
    </groups>
    <test started-at="2023-11-10T13:07:54 PST" name="Default test" finished-at="2023-11-10T13:08:16 PST" duration-ms="21978">
      <class name="TestCases.LaunchApplication">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:TestCases.LaunchApplication@19e4653c]" started-at="2023-11-10T13:07:54 PST" name="beforeSuite" finished-at="2023-11-10T13:07:54 PST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="startServerwithApp()[pri:0, instance:TestCases.LaunchApplication@19e4653c]" started-at="2023-11-10T13:07:54 PST" name="startServerwithApp" finished-at="2023-11-10T13:08:16 PST" duration-ms="21912" status="FAIL">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20000ms 
Host info: host: 'COLLABPH1000238', ip: '192.168.254.133'
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8.1'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:deviceName=PatrickPixel7Midterm, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=C:\Users\COLLABERA\eclipse-workspace\GeneralStore\src\main\resources\appUsed\General-Store.apk}], desiredCapabilities=Capabilities {appium:app: C:\Users\COLLABERA\eclipse-..., appium:automationName: UIAutomator2, appium:deviceName: PatrickPixel7Midterm, platformName: ANDROID}}]
Capabilities {appium:app: C:\Users\COLLABERA\eclipse-..., appium:automationName: UIAutomator2, appium:deviceName: PatrickPixel7Midterm, platformName: ANDROID}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20000ms 
Host info: host: 'COLLABPH1000238', ip: '192.168.254.133'
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8.1'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:deviceName=PatrickPixel7Midterm, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=C:\Users\COLLABERA\eclipse-workspace\GeneralStore\src\main\resources\appUsed\General-Store.apk}], desiredCapabilities=Capabilities {appium:app: C:\Users\COLLABERA\eclipse-..., appium:automationName: UIAutomator2, appium:deviceName: PatrickPixel7Midterm, platformName: ANDROID}}]
Capabilities {appium:app: C:\Users\COLLABERA\eclipse-..., appium:automationName: UIAutomator2, appium:deviceName: PatrickPixel7Midterm, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:113)
at TestCases.BaseClass.startServerwithApp(BaseClass.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:643)
at org.testng.TestRunner.beforeRun(TestRunner.java:632)
at org.testng.TestRunner.run(TestRunner.java:594)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startServerwithApp -->
        <test-method is-config="true" signature="configReports()[pri:0, instance:TestCases.LaunchApplication@19e4653c]" started-at="2023-11-10T13:08:16 PST" name="configReports" finished-at="2023-11-10T13:08:16 PST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configReports -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestCases.LaunchApplication@19e4653c]" started-at="2023-11-10T13:08:16 PST" name="beforeMethod" finished-at="2023-11-10T13:08:16 PST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="launchApp()[pri:0, instance:TestCases.LaunchApplication@19e4653c]" started-at="2023-11-10T13:08:16 PST" name="launchApp" finished-at="2023-11-10T13:08:16 PST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20000ms 
Host info: host: 'COLLABPH1000238', ip: '192.168.254.133'
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8.1'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:deviceName=PatrickPixel7Midterm, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=C:\Users\COLLABERA\eclipse-workspace\GeneralStore\src\main\resources\appUsed\General-Store.apk}], desiredCapabilities=Capabilities {appium:app: C:\Users\COLLABERA\eclipse-..., appium:automationName: UIAutomator2, appium:deviceName: PatrickPixel7Midterm, platformName: ANDROID}}]
Capabilities {appium:app: C:\Users\COLLABERA\eclipse-..., appium:automationName: UIAutomator2, appium:deviceName: PatrickPixel7Midterm, platformName: ANDROID}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20000ms 
Host info: host: 'COLLABPH1000238', ip: '192.168.254.133'
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8.1'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:deviceName=PatrickPixel7Midterm, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=C:\Users\COLLABERA\eclipse-workspace\GeneralStore\src\main\resources\appUsed\General-Store.apk}], desiredCapabilities=Capabilities {appium:app: C:\Users\COLLABERA\eclipse-..., appium:automationName: UIAutomator2, appium:deviceName: PatrickPixel7Midterm, platformName: ANDROID}}]
Capabilities {appium:app: C:\Users\COLLABERA\eclipse-..., appium:automationName: UIAutomator2, appium:deviceName: PatrickPixel7Midterm, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:113)
at TestCases.BaseClass.startServerwithApp(BaseClass.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:643)
at org.testng.TestRunner.beforeRun(TestRunner.java:632)
at org.testng.TestRunner.run(TestRunner.java:594)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestCases.LaunchApplication@19e4653c]" started-at="2023-11-10T13:08:16 PST" name="afterMethod" finished-at="2023-11-10T13:08:16 PST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:TestCases.LaunchApplication@19e4653c]" started-at="2023-11-10T13:08:16 PST" name="closeReport" finished-at="2023-11-10T13:08:16 PST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCases.LaunchApplication@19e4653c]" started-at="2023-11-10T13:08:16 PST" name="tearDown" finished-at="2023-11-10T13:08:16 PST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:TestCases.LaunchApplication@19e4653c]" started-at="2023-11-10T13:08:16 PST" name="afterSuite" finished-at="2023-11-10T13:08:16 PST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestCases.LaunchApplication -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
